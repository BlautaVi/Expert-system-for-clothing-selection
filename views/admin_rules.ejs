<%- include('partials/header') %>
<div class="admin-container">
    <h2>Правила розрахунку</h2>

    <div class="card p-4 mb-4">
        <h4>Додати нове правило</h4>
        <form action="/admin/rules/add" method="POST" class="row g-3">
            <div class="col-md-12">
                <label class="form-label">Опис</label>
                <input type="text" name="description" class="form-control" placeholder="Короткий опис правила" required>
            </div>
            <div class="col-md-3">
                <label class="form-label">Фактор</label>
                <select name="factor" id="factorSelector" class="form-select"></select>
            </div>
            <div class="col-md-3">
                <label class="form-label">Оператор</label>
                <select name="operator" class="form-select" required>
                    <option value=">">></option>
                    <option value="===">===</option>
                    <option value="<"><</option>
                </select>
            </div>
            <div class="col-md-3" id="valueContainer">
                <label class="form-label">Значення</label>
                <input type="text" name="value" class="form-control" required>
            </div>
            <div class="col-md-3">
                <label class="form-label">Модифікатор (множник)</label>
                <input type="number" step="0.01" name="modifier" class="form-control" placeholder="напр. 1.1" required>
            </div>
            <div class="col-12">
                <button type="submit" class="btn btn-success">Зберегти правило</button>
            </div>
        </form>
    </div>

    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Опис</th>
                <th>Фактор</th>
                <th>Умова</th>
                <th>Модифікатор</th>
                <th>Дії</th>
            </tr>
        </thead>
        <tbody>
        <% (rules || []).forEach(r => { %>
            <tr>
                <td><%= r.description %></td>
                <td><%= r.factor %></td>
                <td><code><%= r.factor %> <%= r.operator %> <%= r.value %></code></td>
                <td>x <%= r.modifier %></td>
                <td>
                    <a href="/admin/rules/edit/<%= r.id %>" class="btn btn-primary btn-sm">Редагувати</a>
                    <form action="/admin/rules/delete/<%= r.id %>" method="POST" style="display:inline;">
                        <button type="submit" class="btn btn-danger btn-sm">Видалити</button>
                    </form>
                </td>
            </tr>
        <% }) %>
        </tbody>
    </table>
</div>

<div id="rules-db" data-db='<%- JSON.stringify(db).replace(/'/g, "&#39;").replace(/</g, "\\u003c") %>'></div>
<script>
    const dbData = JSON.parse(document.getElementById('rules-db').dataset.db);
    const factorSelector = document.getElementById('factorSelector');
    const valueContainer = document.getElementById('valueContainer');

    const valueMap = {
        fit: [...new Set((dbData.garments || []).flatMap(g => (g.available_fits || []).map(f => f.name)))],
        sleeve: (dbData.questions && dbData.questions.sleeve_type ? [...new Set(dbData.questions.sleeve_type.answers.map(a => a.value))] : []),
        length: (dbData.questions && dbData.questions.dress_length ? [...new Set(dbData.questions.dress_length.answers.map(a => a.value))] : []),
        print_matching: ['так', 'ні'],
        has_complex_elements: ['так', 'ні']
    };
    const numericFactors = ['height'];

    function populateFactors() {
        const knownFactors = [...new Set([...Object.keys(valueMap), ...numericFactors])];
        factorSelector.innerHTML = knownFactors.map(f => `<option value="${f}">${f}</option>`).join('');
    }

    function updateValueInput() {
        const selectedFactor = factorSelector.value;
        let inputHtml = '<label class="form-label">Значення</label>';
        if (valueMap[selectedFactor] && valueMap[selectedFactor].length) {
            const options = valueMap[selectedFactor].map(val => `<option value="${val}">${val}</option>`).join('');
            inputHtml += `<select name="value" class="form-select" required>${options}</select>`;
        } else {
            const inputType = numericFactors.includes(selectedFactor) ? 'number' : 'text';
            const stepAttr = inputType === 'number' ? ' step="0.01"' : '';
            inputHtml += `<input type="${inputType}" name="value" class="form-control" required${stepAttr}>`;
        }
        valueContainer.innerHTML = inputHtml;
    }

    populateFactors();
    factorSelector.addEventListener('change', updateValueInput);
    updateValueInput();
</script>
<%- include('partials/footer') %>